{"version":3,"sources":["webpack://typescript/webpack/bootstrap","webpack://typescript/webpack/runtime/compat get default export","webpack://typescript/webpack/runtime/define property getters","webpack://typescript/webpack/runtime/hasOwnProperty shorthand","webpack://typescript/webpack/runtime/make namespace object","webpack://typescript/external \"k6\"","webpack://typescript/external \"k6/encoding\"","webpack://typescript/external \"k6/metrics\"","webpack://typescript/external \"k6/data\"","webpack://typescript/external \"k6/execution\"","webpack://typescript/external \"k6/http\"","webpack://typescript/external \"https:/jslib.k6.io/k6-utils/1.1.0/index.js\"","webpack://typescript/./src/mijntele2-csr-test.ts"],"names":["authorizeTrend","Trend","loginTrend","tokenTrend","impersonateTrend","introspectTrend","revokeTrend","logoutTrend","credFile","__ENV","CRED_FILE","cred_file_data","JSON","parse","open","users","SharedArray","csr_users","config","csr_config","host","login_uri","tokenUrl","introspectUrl","revokeUrl","logoutUrl","client_id","client_secret","redirect_uri","scope","options","stages","duration","target","thresholds","http_req_failed","http_req_duration","app_authorize","app_login","app_token","app_impersonate","app_introspect","app_revoke","app_logout","user","execution","length","auth_code","id_token","access_token","refresh_token","state","randomString","result","group","authUrl","resp","http","add","timings","check","r","status","url","startsWith","includes","loginResp","submitForm","formSelector","fields","username","password","params","redirects","submitSelector","headers","split","code","grant_type","Authorization","b64encode","json","undefined","token","refreshResp","csr_token","dsl_token","introResp","revokeResp","token_type_hint","sleep"],"mappings":"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","file":"mijntele2-csr-test.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/encoding\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/metrics\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/data\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/execution\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/http\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https://jslib.k6.io/k6-utils/1.1.0/index.js\");;","import {check, group, sleep} from \"k6\";\nimport {b64encode} from 'k6/encoding';\nimport {Trend} from 'k6/metrics';\nimport {SharedArray} from \"k6/data\";\nimport execution from 'k6/execution';\nimport http from \"k6/http\";\n// @ts-ignore\nimport {randomString} from \"https://jslib.k6.io/k6-utils/1.1.0/index.js\";\n\ntype User = {\n    username: string,\n    password: string,\n}\n\nconst authorizeTrend = new Trend('app_authorize', true);\nconst loginTrend = new Trend('app_login', true);\nconst tokenTrend = new Trend('app_token', true);\nconst impersonateTrend = new Trend('app_impersonate', true);\nconst introspectTrend = new Trend('app_introspect', true);\nconst revokeTrend = new Trend('app_revoke', true);\nconst logoutTrend = new Trend('app_logout', true);\n\nconst credFile = __ENV.CRED_FILE || 'cred.json';\nconst cred_file_data = JSON.parse(open(credFile));\nconst users = new SharedArray('users', () => {\n    return cred_file_data.csr_users;\n}) as User[];\n\nconst config = cred_file_data.csr_config;\nconst host = config.host;\nconst login_uri = `${host}/authep/login`\nconst tokenUrl = `${host}/oauth2/token`\nconst introspectUrl = `${host}/oauth2/introspect`;\nconst revokeUrl = `${host}/oauth2/revoke`;\nconst logoutUrl = `${host}/oidc/logout`;\nconst client_id = config.client_id;\nconst client_secret = config.client_secret;\nconst redirect_uri = config.redirect_uri;\nconst scope = config.scope;\n\nexport const options = {\n    stages: [\n        {duration: \"2s\", target: \"2\"},\n        {duration: \"30s\", target: \"5\"},\n        {duration: \"2s\", target: \"0\"},\n    ],\n    thresholds: {\n        // During the whole test execution, the error rate must be lower than 1%.\n        http_req_failed: ['rate<0.01'],\n        http_req_duration: ['p(90)<500'],\n        app_authorize: ['p(90)<500'],\n        app_login: ['p(90)<500'],\n        app_token: ['p(90)<500'],\n        app_impersonate: ['p(90)<500'],\n        app_introspect: ['p(90)<500'],\n        app_revoke: ['p(90)<500'],\n        app_logout: ['p(90)<500'],\n    },\n}\n\nexport default function () {\n    const user = users[execution.vu.idInTest % users.length]\n    let auth_code: string = \"\";\n    let id_token = \"\";\n    let access_token = \"\";\n    let refresh_token = \"\";\n    const state = randomString(16);\n    let result = true;\n\n    group(\"login\", () => {\n        const authUrl = `${host}/oauth2/authorize?client_id=${client_id}&response_type=code&state=${state}&redirect_uri=${redirect_uri}&scope=${scope}`\n        const resp = http.get(authUrl);\n        authorizeTrend.add(resp.timings.duration);\n        result = check(resp, {\n            \"authorize status is 200\": (r) => r.status === 200,\n            \"redirects to login\": (r) => r.url.startsWith(login_uri),\n            \"login page has state\": (r) => r.url.includes(`state=${state}`),\n        });\n        if (!result) return;\n        const loginResp = resp.submitForm({\n            formSelector: '#form',\n            fields: {\n                username: user.username,\n                password: user.password,\n            },\n            params: {\n                redirects: 1\n            },\n            submitSelector: \"button.button-login\"\n        });\n        loginTrend.add(loginResp.timings.duration);\n        result = check(loginResp, {\n            \"login status is 302\": (r) => r.status === 302,\n            \"login redirects to redirect_uri\": (r) => r.headers[\"Location\"].startsWith(redirect_uri),\n            \"state is returned\": (r) => r.headers[\"Location\"].includes(`state=${state}`),\n            \"code is issued\": (r) => r.headers[\"Location\"].includes(`code=`),\n        });\n        auth_code = loginResp.headers[\"Location\"].split(\"code=\")[1].split(\"&\")[0];\n    });\n\n    group(\"token\", () => {\n        const resp = http.post(tokenUrl, {\n            code: auth_code,\n            grant_type: \"authorization_code\",\n            redirect_uri: redirect_uri,\n            scope, state,\n        }, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                Authorization: `Basic ${b64encode(`${client_id}:${client_secret}`)}`,\n            }\n        });\n        tokenTrend.add(resp.timings.duration);\n        result = check(resp, {\n            \"token status is 200\": (r) => r.status === 200,\n            \"access token is returned\": (r) => r.json(\"access_token\") !== undefined,\n            \"id token is returned\": (r) => r.json(\"id_token\") !== undefined,\n            \"refresh token is returned\": (r) => r.json(\"refresh_token\") !== undefined,\n        });\n        access_token = resp.json(\"access_token\") as string;\n        id_token = resp.json(\"id_token\") as string;\n        refresh_token = resp.json(\"refresh_token\") as string;\n    });\n\n    group(\"introspect\", () => {\n        const resp = http.post(introspectUrl, {\n            token: access_token\n        }, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            }\n        });\n        introspectTrend.add(resp.timings.duration);\n        result = check(resp, {\n            \"introspect status is 200\": (r) => r.status === 200,\n            \"introspect returns active\": (r) => r.json(\"active\") === true,\n        });\n        if (!result) return;\n        const refreshResp = http.post(introspectUrl, {\n            token: refresh_token\n        }, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            }\n        });\n        introspectTrend.add(refreshResp.timings.duration);\n        result = check(refreshResp, {\n            \"refresh introspect status is 200\": (r) => r.status === 200,\n            \"refresh introspect returns active\": (r) => r.json(\"active\") === true,\n        });\n    });\n\n    group(\"impersonate\", () => {\n        let result = true;\n        const resp = http.post(tokenUrl, {\n            grant_type: \"impersonate\",\n            csr_token: access_token,\n            scope,\n            username: \"se-team@consumer.tele2.nl\"\n        }, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                Authorization: `Basic ${b64encode(`${client_id}:${client_secret}`)}`,\n            }\n        });\n        impersonateTrend.add(resp.timings.duration);\n        result = check(resp, {\n            \"impersonate status is 200\": (r) => r.status === 200,\n            \"impersonate returns access token\": (r) => r.json(\"access_token\") !== undefined,\n            \"impersonate returns id token\": (r) => r.json(\"id_token\") !== undefined,\n            \"impersonate returns refresh token\": (r) => r.json(\"refresh_token\") !== undefined,\n        });\n        if (!result) return;\n        const dsl_token = resp.json(\"access_token\") as string;\n        const introResp = http.post(introspectUrl, {\n            token: dsl_token\n        }, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            }\n        });\n        introspectTrend.add(introResp.timings.duration);\n        result = check(introResp, {\n            \"introspect status is 200\": (r) => r.status === 200,\n            \"introspect returns active\": (r) => r.json(\"active\") === true,\n        });\n        if (!result) return;\n        const revokeResp = http.post(revokeUrl, {\n            token: dsl_token,\n            token_type_hint: \"access_token\"\n        }, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                Authorization: `Basic ${b64encode(`${client_id}:${client_secret}`)}`,\n            }\n        });\n        revokeTrend.add(revokeResp.timings.duration);\n        result = check(revokeResp, {\n            \"revoke status is 200\": (r) => r.status === 200,\n        });\n    });\n    group(\"logout\", () => {\n        const url = `${logoutUrl}?id_token_hint=${id_token}&post_logout_redirect_uri=${redirect_uri}`;\n        const resp = http.get(url, {\n            redirects: 0,\n        });\n        logoutTrend.add(resp.timings.duration);\n        result = check(resp, {\n            \"logout status is 200\": (r) => r.status === 302,\n            \"logout redirects to redirect_uri\": (r) => r.headers[\"Location\"].startsWith(redirect_uri),\n        });\n        if (!result) return;\n        const revokeResp = http.post(revokeUrl, {\n            token: access_token,\n            token_type_hint: \"access_token\"\n        }, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                Authorization: `Basic ${b64encode(`${client_id}:${client_secret}`)}`,\n            }\n        });\n        revokeTrend.add(revokeResp.timings.duration);\n        result = check(revokeResp, {\n            \"revoke status is 200\": (r) => r.status === 200,\n        });\n    });\n    sleep(1);\n}\n"],"sourceRoot":""}